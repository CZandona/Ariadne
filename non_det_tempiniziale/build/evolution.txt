heating_system=CompositeHybridAutomaton(
[
HybridAutomaton( 
  modes=
    DiscreteMode( location=(), differential_equations=[dot(t)=c1.00] ),
)
,
HybridAutomaton( 
  modes=
    DiscreteMode( location=(heating|coolgoon), differential_equations=[dot(temp)=cneg(250)*(h-t)*(timef-t*cneg(0.7))+tempf], invariants={ less_less_hot:not((cadd(add(1.2487,0.3),0.9)<=t)) }, guards={ less_less_hot:(cadd(add(1.2487,0.3),0.9)<=t) }, targets={ less_less_hot:(heating|cooloff) }, resets={ less_less_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|cooloff), differential_equations=[dot(temp)=cneg(250)*(timef-t*cneg(0.7))+tempf], invariants={ end_cool:not((temp<=c20)) }, guards={ end_cool:(temp<=c20) }, targets={ end_cool:(heating|stopHeating) }, resets={ end_cool:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|coolon), differential_equations=[dot(temp)=cneg(625)*(timef-t*cneg(0.7))+tempf], invariants={ less_hot:not((cadd(1.2487,0.3)<=t)) }, guards={ less_hot:(cadd(1.2487,0.3)<=t) }, targets={ less_hot:(heating|coolgoon) }, resets={ less_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|end), differential_equations=[dot(temp)=a*log(b*(t-d)+c)+d], invariants={ too_hot:not((c600<=temp)) }, guards={ too_hot:(c600<=temp) }, targets={ too_hot:(heating|coolon) }, resets={ too_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|start), differential_equations=[dot(temp)=c154*pow(t,0)+c20], invariants={ more_hot:not((c0.2<=t)) }, guards={ more_hot:(c0.2<=t) }, targets={ more_hot:(heating|end) }, resets={ more_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|startHeating), differential_equations=[dot(temp)=c0], invariants={ must_heating:(t<=cadd(0.01,0.01)) }, guards={ on:(csub(0.01,0.01)<=t) }, targets={ on:(heating|start) }, resets={ on:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|stopHeating), differential_equations=[dot(temp)=c0] ),
)
]
)


CompositeHybridAutomaton(
[
HybridAutomaton( 
  modes=
    DiscreteMode( location=(), differential_equations=[dot(t)=c1.00] ),
)
,
HybridAutomaton( 
  modes=
    DiscreteMode( location=(heating|coolgoon), differential_equations=[dot(temp)=cneg(250)*(h-t)*(timef-t*cneg(0.7))+tempf], invariants={ less_less_hot:not((cadd(add(1.2487,0.3),0.9)<=t)) }, guards={ less_less_hot:(cadd(add(1.2487,0.3),0.9)<=t) }, targets={ less_less_hot:(heating|cooloff) }, resets={ less_less_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|cooloff), differential_equations=[dot(temp)=cneg(250)*(timef-t*cneg(0.7))+tempf], invariants={ end_cool:not((temp<=c20)) }, guards={ end_cool:(temp<=c20) }, targets={ end_cool:(heating|stopHeating) }, resets={ end_cool:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|coolon), differential_equations=[dot(temp)=cneg(625)*(timef-t*cneg(0.7))+tempf], invariants={ less_hot:not((cadd(1.2487,0.3)<=t)) }, guards={ less_hot:(cadd(1.2487,0.3)<=t) }, targets={ less_hot:(heating|coolgoon) }, resets={ less_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|end), differential_equations=[dot(temp)=a*log(b*(t-d)+c)+d], invariants={ too_hot:not((c600<=temp)) }, guards={ too_hot:(c600<=temp) }, targets={ too_hot:(heating|coolon) }, resets={ too_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|start), differential_equations=[dot(temp)=c154*pow(t,0)+c20], invariants={ more_hot:not((c0.2<=t)) }, guards={ more_hot:(c0.2<=t) }, targets={ more_hot:(heating|end) }, resets={ more_hot:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|startHeating), differential_equations=[dot(temp)=c0], invariants={ must_heating:(t<=cadd(0.01,0.01)) }, guards={ on:(csub(0.01,0.01)<=t) }, targets={ on:(heating|start) }, resets={ on:[prime(temp)=temp] } ),
    DiscreteMode( location=(heating|stopHeating), differential_equations=[dot(temp)=c0] ),
)
]
)

Computing evolution... 
Plotting trajectory... done.
